application.properties:
=======================
server.port=7272

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/employee_management_system
spring.datasource.username=root
spring.datasource.password=root


spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect


Employee.java:
==============
package com.ihub.www.model;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Table(name="employees")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class Employee 
{
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private long id;
	
	@Column
	private String firstName;
	
	@Column
	private String lastName;
	
	@Column
	private String email;
}




EmployeeRepository.java:
========================
package com.ihub.www.repo;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import com.ihub.www.model.Employee;

@Repository
public interface EmployeeRepository extends JpaRepository<Employee, Long> 
{

}




ResourceNotFoundException.java:
===============================
package com.ihub.www.exception;

	import org.springframework.http.HttpStatus;
	import org.springframework.web.bind.annotation.ResponseStatus;

	@ResponseStatus(value =HttpStatus.NOT_FOUND)
	public class ResourceNotFoundException extends RuntimeException
	{

		private static final long serialVersionUID = 1L;
	
		public ResourceNotFoundException(String message)
		{
			super(message);
		}
	}



EmployeeService.java:
=====================
package com.ihub.www.service;

	import java.util.List;

	import org.springframework.beans.factory.annotation.Autowired;
    import org.springframework.http.HttpStatus;
    import org.springframework.http.ResponseEntity;
    import org.springframework.stereotype.Service;
    import com.ihub.www.exception.ResourceNotFoundException;
    import com.ihub.www.model.Employee;
	import com.ihub.www.repo.EmployeeRepository;

	@Service
	public class EmployeeService 
	{
		@Autowired
		EmployeeRepository employeeRepository;
		private Object updateEmp;
	
		public List<Employee> getAllEmployees()
		{
			return employeeRepository.findAll();
		}
		
		
		public Employee addEmployee(Employee employee)
		{
			return employeeRepository.save(employee);
		}
		
		
		public Employee getEmployeeById(Long id)
		{
			return employeeRepository.findById(id).orElseThrow(() -> new ResourceNotFoundException("Id Not Found"));
		}
		
		public ResponseEntity<Employee> updateEmployee(Long id,Employee employee)
		{
			Employee emp=employeeRepository.findById(id).orElseThrow(()->new ResourceNotFoundException("Employee Does not exit"));
			emp.setFirstName(employee.getFirstName());
			emp.setLastName(employee.getLastName());
			emp.setEmail(employee.getEmail());
			
			Employee updateEmp=employeeRepository.save(emp);
			
			return ResponseEntity.ok(updateEmp);
		}
		
		
		public ResponseEntity<HttpStatus> deleteEmployee(Long id)
		{
			Employee emp=employeeRepository.findById(id).orElseThrow(()->new ResourceNotFoundException("ID Does not Exit"));
			
			employeeRepository.delete(emp);
			
			return new ResponseEntity<>(HttpStatus.NO_CONTENT);
		}
		
	}
	



EmployeeController.java:
========================
package com.ihub.www.controller;

	import java.util.List;

    import org.springframework.beans.factory.annotation.Autowired;
    import org.springframework.http.HttpStatus;
    import org.springframework.http.ResponseEntity;
    import org.springframework.web.bind.annotation.CrossOrigin;
    import org.springframework.web.bind.annotation.DeleteMapping;
    import org.springframework.web.bind.annotation.GetMapping;
    import org.springframework.web.bind.annotation.PathVariable;
    import org.springframework.web.bind.annotation.PostMapping;
    import org.springframework.web.bind.annotation.PutMapping;
    import org.springframework.web.bind.annotation.RequestBody;
    import org.springframework.web.bind.annotation.RequestMapping;
    import org.springframework.web.bind.annotation.RestController;

    import com.ihub.www.model.Employee;
    import com.ihub.www.service.EmployeeService;
    
	@CrossOrigin(origins = "http://localhost:3000")
	@RestController
	@RequestMapping("/api/v1/")
	public class EmployeeController 
	{
		@Autowired
		EmployeeService employeeService;
	
		@GetMapping("/employees")
		public List<Employee> getAllEmployees()
		{
			return employeeService.getAllEmployees();
		}
		
		@PostMapping("/employees")
		public Employee addEmployee(@RequestBody Employee employee)
		{
			return employeeService.addEmployee(employee);
		}
		
		@GetMapping("/employee/{id}")
		public Employee getEmployeeById(@PathVariable Long id)
		{
			return employeeService.getEmployeeById(id);
		}
		
		@PutMapping("/employees/{id}")
		public ResponseEntity<Employee> updateEmployee(@PathVariable Long id,@RequestBody Employee employee)
		{
			return employeeService.updateEmployee(id,employee);
		}
		
		@DeleteMapping("/employees/{id}")
		public ResponseEntity<HttpStatus> deleteEmployee(@PathVariable Long id)
		{
			return employeeService.deleteEmployee(id);
		}
		
		
	}



pom.xml:
========
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.ihub.www</groupId>
	<artifactId>springboot-backend</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>springboot-backend</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.1.37</version>
            </dependency>
            
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>


Application.java:
=================
package com.ihub.www;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class SpringbootBackendApplication {

	public static void main(String[] args) {
		SpringApplication.run(SpringbootBackendApplication.class, args);
	}

}


ApplicationTests.java:
======================
package com.ihub.www;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
class SpringbootBackendApplicationTests {

	@Test
	void contextLoads() {
	}

}
























